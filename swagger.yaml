swagger: '2.0'
info:
  version: '0.9.0'
  title: 'WebAuthn / FIDO2 Server API'
  description: 'A server interface for account registration and login using  W3C WebAuthn / FIDO2, based on the FIDO2 Server API Documentation from the FIDO2 conformance tools'
produces:
- application/json

paths:
  /attestation/options:
    post:
      parameters:
        - $ref: '#/parameters/ServerPublicKeyCredentialCreationOptionsRequest'
      responses:
        '200':
          $ref: '#/responses/ServerPublicKeyCredentialCreationOptionsResponse'
        default:
          $ref: '#/responses/ServerResponseError'

  /attestation/result:
    post:
      parameters:
        - $ref: '#/parameters/ServerPublicKeyCredentialAttestation'
      responses:
        '200':
          $ref: '#/responses/ServerResponseSuccess'
        default:
          $ref: '#/responses/ServerResponseError'

  /assertion/options:
    post:
      parameters:
        - $ref: '#/parameters/ServerPublicKeyCredentialGetOptionsRequest'
      responses:
        '200':
          $ref: '#/responses/ServerPublicKeyCredentialGetOptionsResponse'
        default:
          $ref: '#/responses/ServerResponseError'

  /assertion/result:
    post:
      parameters:
        - $ref: '#/parameters/ServerPublicKeyCredentialAssertion'
      responses:
        '200':
          $ref: '#/responses/ServerResponseSuccess'
        default:
          $ref: '#/responses/ServerResponseError'

parameters:

  ServerPublicKeyCredentialCreationOptionsRequest:
    name: ServerPublicKeyCredentialCreationOptionsRequest
    description: The requested options. 
    in: body
    schema:
      type: object
      required:
      - username
      - displayName
      example:
        username: apowers
        displayName: Adam Powers
      properties:
        username:
          type: string
        displayName:
          type: string
        authenticatorSelection:
          $ref: '#/definitions/AuthenticatorSelectionCriteria'
        attestation:
          $ref: '#/definitions/AttestationConveyancePreference'

  ServerPublicKeyCredentialAttestation:
    name: ServerPublicKeyCredential
    description: The PublicKeyCredential generated by `navigator.credentials.create()`
    in: body
    schema:
      allOf:
        - $ref: '#/definitions/Credential'
        - properties:
            response:
              $ref: '#/definitions/ServerAuthenticatorAttestationResponse'

  ServerPublicKeyCredentialGetOptionsRequest:
    name: ServerPublicKeyCredentialGetOptionsRequest
    description: The options to pass to `navigator.credentials.get()`
    in: body
    schema:
      type: object
      properties:
        username:
          type: string
        userVerification:
          $ref: '#/definitions/UserVerificationRequirement'

  ServerPublicKeyCredentialAssertion:
    name: ServerPublicKeyCredential
    description: The PublicKeyCredential generated by `navigator.credentials.create()`
    in: body
    schema:
      allOf:
        - $ref: '#/definitions/Credential'
        - properties:
            response:
              $ref: '#/definitions/ServerAuthenticatorAssertionResponse'

responses:

  ServerResponseError:
    description: Failure server response
    schema:
      $ref: '#/definitions/ServerResponse'
    examples:
      application/json:
        status: "failed"
        errorMessage: "out of memory"

  ServerResponseSuccess:
    description: Success server response
    schema:
      $ref: '#/definitions/ServerResponse'
    examples:
      application/json:
        status: "ok"
        errorMessage: ""

  ServerPublicKeyCredentialCreationOptionsResponse:
    description: Creation options for `navigatior.credentials.create()`
    schema:
      allOf:
        - $ref: '#/definitions/ServerResponse'
        - properties:
            rp:
              $ref: '#/definitions/PublicKeyCredentialRpEntity'
            user:
              $ref: '#/definitions/ServerPublicKeyCredentialUserEntity'
            challenge:
              type: string
            pubKeyCredParams:
              type: array
              items:
                $ref: '#/definitions/PublicKeyCredentialParameters'
            timeout:
              type: integer
              example: 60000
            excludeCredentials:
              type: array
              items:
                $ref: '#/definitions/ServerPublicKeyCredentialDescriptor'
            authenticatorSelection:
              $ref: '#/definitions/AuthenticatorSelectionCriteria'
            attestation:
              $ref: '#/definitions/AttestationConveyancePreference'
            extensions:
              $ref: '#/definitions/AuthenticationExtensionsClientInputs'

  ServerPublicKeyCredentialGetOptionsResponse:
    description: The results of `navigator.credentials.get()`
    schema:
      allOf:
        - $ref: '#/definitions/ServerResponse'
        - properties:
            challenge:
              type: string
            timeout:
              type: integer
            rpId:
              type: string
            allowCredentials:
              type: array
              items:
                $ref: '#/definitions/ServerPublicKeyCredentialDescriptor'
            userVerification:
              $ref: '#/definitions/UserVerificationRequirement'
            extensions:
              $ref: '#/definitions/AuthenticationExtensionsClientInputs'

definitions:

  ServerResponse:
    type: object
    required:
    - status
    - errorMessage
    properties:
      status:
        type: string
        enum:
          - ok
          - failed
        example: ok
      errorMessage:
        type: string
        example: ""

  AuthenticatorSelectionCriteria:
    type: object
    properties:
      authenticatorAttachment:
        $ref: '#/definitions/AuthenticatorAttachment'
      requireResidentKey:
        type: boolean
      userVerification:
        $ref: '#/definitions/UserVerificationRequirement'

  AttestationConveyancePreference:
    type: string
    example: direct
    enum:
      - none
      - indirect
      - direct

  AuthenticatorAttachment:
    type: string
    example: platform
    enum:
      - platform
      - cross-platform

  UserVerificationRequirement:
    type: string
    example: required
    enum:
      - required
      - preferred
      - discouraged

  PublicKeyCredentialRpEntity:
    allOf:
      - $ref: '#/definitions/PublicKeyCredentialEntity'
      - properties:
          id:
            type: string

  PublicKeyCredentialEntity:
    type: object
    properties:
      name:
        type: string
      icon:
        type: string

  ServerPublicKeyCredentialUserEntity:
    allOf:
      - $ref: '#/definitions/PublicKeyCredentialEntity'
      - properties:
          id:
            type: string
            example: apowers
          displayName:
            type: string
            example: Adam Powers

  PublicKeyCredentialParameters:
    type: object
    properties:
      type:
        $ref: '#/definitions/PublicKeyCredentialType'
      alg:
        $ref: '#/definitions/COSEAlgorithmIdentifier'

  COSEAlgorithmIdentifier:
    type: integer
    example: -7
    enum:
      - -7
      - -257

  PublicKeyCredentialType:
    type: string
    example: public-key
    enum:
      - public-key

  ServerPublicKeyCredentialDescriptor:
    type: object
    properties:
      type:
        $ref: '#/definitions/PublicKeyCredentialType'
      id:
        type: string
      transports:
        type: array
        items:
          $ref: '#/definitions/AuthenticatorTransport'

  AuthenticatorTransport:
    type: string
    enum:
      - usb
      - nfc
      - ble

  AuthenticationExtensionsClientInputs:
    type: object

  ServerAuthenticatorResponse:
    type: object
    properties:
      clientDataJSON:
        type: string

  ServerAuthenticatorAssertionResponse:
    type: object
    allOf:
    - $ref: '#/definitions/ServerAuthenticatorResponse'
    - properties:
        authenticatorData:
          type: string
        signature:
          type: string
        userHandle:
          type: string

  ServerAuthenticatorAttestationResponse:
    type: object
    allOf:
    - $ref: '#/definitions/ServerAuthenticatorResponse'
    - properties:
        attestationObject:
          type: string

  Credential:
    type: object
    properties:
      id:
        type: string
      rawId:
        type: string
      type:
        $ref: '#/definitions/PublicKeyCredentialType'